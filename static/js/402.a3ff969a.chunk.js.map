{"version":3,"file":"static/js/402.a3ff969a.chunk.js","mappings":"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","sources":["components/reportPages/families/Payments.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import {\r\n//   Button,\r\n//   Typography,\r\n//   IconButton,\r\n//   Grid,\r\n//   FormControl,\r\n//   InputLabel,\r\n//   Select,\r\n//   MenuItem,\r\n//   Box,\r\n//   TextField,\r\n// } from \"@mui/material\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import SortByAlphaIcon from \"@mui/icons-material/SortByAlpha\";\r\n\r\n// const Payments = () => {\r\n//   const navigate = useNavigate();\r\n\r\n//   // State for filters\r\n//   const [selectedSchool, setSelectedSchool] = useState(\"\");\r\n//   const [selectedStandard, setSelectedStandard] = useState(\"\");\r\n//   const [selectedDivision, setSelectedDivision] = useState(\"\");\r\n\r\n//   // Mock data for filters\r\n//   const schools = [\r\n//     { id: 1, name: \"ABC School\" },\r\n//     { id: 2, name: \"XYZ School\" },\r\n//   ];\r\n//   const standards = [\"1st\", \"2nd\", \"3rd\"];\r\n//   const divisions = [\"A\", \"B\", \"C\"];\r\n\r\n//   return (\r\n//     <div>\r\n//       {/* Back Button */}\r\n//       <Button\r\n//         variant=\"outlined\"\r\n//         size=\"small\"\r\n//         sx={{ mb: 1 }}\r\n//         onClick={() => navigate(0)}\r\n//       >\r\n//         Back\r\n//       </Button>\r\n\r\n//       {/* Title with Sorting Icon */}\r\n//       <div\r\n//         style={{\r\n//           display: \"flex\",\r\n//           alignItems: \"center\",\r\n//           justifyContent: \"space-between\",\r\n//         }}\r\n//       >\r\n//         <Typography variant=\"h6\" fontWeight={\"bold\"}>\r\n//           Guardians Payments\r\n//         </Typography>\r\n//         <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>\r\n//           <TextField\r\n//             sx={{ width: 200 }}\r\n//             label=\"Search by name / email\"\r\n//             size=\"small\"\r\n//             variant=\"outlined\"\r\n//             // value={searchTerm}\r\n//             // onChange={(e) => setSearchTerm(e.target.value)}\r\n//           />\r\n\r\n//           <IconButton\r\n//             sx={{\r\n//               ml: 0,\r\n//               backgroundColor: \"white\",\r\n//               color: \"black\",\r\n//             }}\r\n//           >\r\n//             <SortByAlphaIcon fontSize=\"medium\" titleAccess=\"Sort List\" />\r\n//           </IconButton>\r\n//         </Box>\r\n//       </div>\r\n\r\n//       {/* Filters Section */}\r\n//       <Grid container spacing={1} sx={{ mb: 2, mt: 1 }}>\r\n//         <Grid item xs={12} sm={4}>\r\n//           {/* School Filter */}\r\n//           <FormControl fullWidth size=\"small\">\r\n//             <InputLabel>School</InputLabel>\r\n//             <Select\r\n//               value={selectedSchool}\r\n//               label=\"School\"\r\n//               onChange={(e) => {\r\n//                 setSelectedSchool(e.target.value);\r\n//                 setSelectedStandard(\"\");\r\n//                 setSelectedDivision(\"\");\r\n//               }}\r\n//             >\r\n//               <MenuItem value=\"\" disabled>\r\n//                 Select School\r\n//               </MenuItem>\r\n//               {schools.map((school) => (\r\n//                 <MenuItem key={school.id} value={school.name}>\r\n//                   {school.name}\r\n//                 </MenuItem>\r\n//               ))}\r\n//             </Select>\r\n//           </FormControl>\r\n//         </Grid>\r\n\r\n//         <Grid item xs={6} sm={4}>\r\n//           {/* Standard Filter */}\r\n//           <FormControl fullWidth size=\"small\">\r\n//             <InputLabel>Standard</InputLabel>\r\n//             <Select\r\n//               value={selectedStandard}\r\n//               label=\"Standard\"\r\n//               onChange={(e) => {\r\n//                 setSelectedStandard(e.target.value);\r\n//                 setSelectedDivision(\"\");\r\n//               }}\r\n//               disabled={!selectedSchool}\r\n//             >\r\n//               <MenuItem value=\"\" disabled>\r\n//                 Select Standard\r\n//               </MenuItem>\r\n//               {standards.map((standard) => (\r\n//                 <MenuItem key={standard} value={standard}>\r\n//                   {standard}\r\n//                 </MenuItem>\r\n//               ))}\r\n//             </Select>\r\n//           </FormControl>\r\n//         </Grid>\r\n\r\n//         <Grid item xs={6} sm={4}>\r\n//           {/* Division Filter */}\r\n//           <FormControl fullWidth size=\"small\">\r\n//             <InputLabel>Division</InputLabel>\r\n//             <Select\r\n//               value={selectedDivision}\r\n//               label=\"Division\"\r\n//               onChange={(e) => setSelectedDivision(e.target.value)}\r\n//               disabled={!selectedStandard}\r\n//             >\r\n//               <MenuItem value=\"\" disabled>\r\n//                 Select Division\r\n//               </MenuItem>\r\n//               {divisions.map((division) => (\r\n//                 <MenuItem key={division} value={division}>\r\n//                   {division}\r\n//                 </MenuItem>\r\n//               ))}\r\n//             </Select>\r\n//           </FormControl>\r\n//         </Grid>\r\n//       </Grid>\r\n\r\n//       {/* Content */}\r\n//       <Typography variant=\"body1\" sx={{ marginTop: 2 }}>\r\n//         This page contains Payments information of Guardians.\r\n//       </Typography>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Payments;\r\n\r\nimport React, { useState, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  Typography,\r\n  IconButton,\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Box,\r\n  TextField,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Card,\r\n  CardContent,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport SortByAlphaIcon from \"@mui/icons-material/SortByAlpha\";\r\nimport { QRCodeSVG } from \"qrcode.react\";\r\nimport { Print } from \"@mui/icons-material\";\r\n\r\n// Mock data for students\r\nconst mockStudents = [\r\n  {\r\n    id: 1,\r\n    name: \"John Smith\",\r\n    school: \"ABC School\",\r\n    standard: \"1st\",\r\n    division: \"A\",\r\n    guardianName: \"Mike Smith\",\r\n    guardianEmail: \"mike@example.com\",\r\n    totalFees: 5000,\r\n    pendingFees: 3000,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Jane Smith\",\r\n    school: \"ABC School\",\r\n    standard: \"3rd\",\r\n    division: \"B\",\r\n    guardianName: \"Mike Smith\",\r\n    guardianEmail: \"mike@example.com\",\r\n    totalFees: 5500,\r\n    pendingFees: 4000,\r\n  },\r\n];\r\n\r\n// Receipt Component\r\nconst FeeReceipt = React.forwardRef(({ paymentData }, ref) => {\r\n  return (\r\n    <div ref={ref} style={{ padding: \"40px\", fontFamily: \"Arial, sans-serif\" }}>\r\n      <Typography variant=\"h4\" align=\"center\" fontWeight={\"bold\"} gutterBottom>\r\n        Fee Payment Receipt\r\n      </Typography>\r\n      <Divider sx={{ my: 1 }} />\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={6}>\r\n          <Typography>\r\n            <strong>Receipt No:</strong> {paymentData.receiptNo}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={6} align=\"right\">\r\n          <Typography>\r\n            <strong>Date:</strong> {paymentData.date}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography>\r\n            <strong>Guardian Name:</strong> {paymentData.guardianName}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography>\r\n            <strong>School:</strong> {paymentData.school}\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h6\" fontWeight={\"bold\"} gutterBottom>\r\n            Payment Details\r\n          </Typography>\r\n          {paymentData.students.map((student) => (\r\n            <Box key={student.id} sx={{ mb: 2 }}>\r\n              <Typography>\r\n                <strong>Student Name:</strong> {student.name}\r\n              </Typography>\r\n              <Typography>\r\n                <strong>Class:</strong> {student.standard} - {student.division}\r\n              </Typography>\r\n              <Typography>\r\n                <strong>Amount Paid:</strong> ₹{student.amountPaid}\r\n              </Typography>\r\n              <Typography>\r\n                <strong>Remaining Fees:</strong> ₹{student.remainingFees}\r\n              </Typography>\r\n              <Divider sx={{ my: 1 }} />\r\n            </Box>\r\n          ))}\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Typography textAlign={\"right\"}>\r\n            <strong>Total Amount Paid:</strong> ₹{paymentData.totalAmount}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Box sx={{ mt: 4, textAlign: \"center\" }}>\r\n        <Typography sx={{ color: \"#666\", fontWeight: \"bold\" }}>\r\n          🤗 Thank you for your payment 🤗\r\n        </Typography>\r\n      </Box>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst Payments = () => {\r\n  const navigate = useNavigate();\r\n  const receiptRef = useRef();\r\n\r\n  // State\r\n  const [selectedSchool, setSelectedSchool] = useState(\"\");\r\n  const [selectedStandard, setSelectedStandard] = useState(\"\");\r\n  const [selectedDivision, setSelectedDivision] = useState(\"\");\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [openPaymentDialog, setOpenPaymentDialog] = useState(false);\r\n  const [selectedStudents, setSelectedStudents] = useState([]);\r\n  const [receiptData, setReceiptData] = useState(null);\r\n  const [openReceiptDialog, setOpenReceiptDialog] = useState(false);\r\n\r\n  // Mock data for filters\r\n  const schools = [\r\n    { id: 1, name: \"ABC School\" },\r\n    { id: 2, name: \"XYZ School\" },\r\n  ];\r\n  const standards = [\"1st\", \"2nd\", \"3rd\"];\r\n  const divisions = [\"A\", \"B\", \"C\"];\r\n\r\n  // Filter students based on guardian\r\n  const filterStudentsByGuardian = (guardianEmail) => {\r\n    return mockStudents.filter(\r\n      (student) =>\r\n        student.guardianEmail === guardianEmail &&\r\n        (!selectedSchool || student.school === selectedSchool) &&\r\n        (!selectedStandard || student.standard === selectedStandard) &&\r\n        (!selectedDivision || student.division === selectedDivision)\r\n    );\r\n  };\r\n\r\n  // Handle student selection for payment\r\n  const handleStudentSelection = (student) => {\r\n    const isSelected = selectedStudents.find((s) => s.id === student.id);\r\n    if (isSelected) {\r\n      setSelectedStudents(selectedStudents.filter((s) => s.id !== student.id));\r\n    } else {\r\n      setSelectedStudents([...selectedStudents, student]);\r\n    }\r\n  };\r\n\r\n  // Generate QR code data\r\n  const generateQRData = () => {\r\n    const totalAmount = selectedStudents.reduce(\r\n      (sum, student) => sum + student.pendingFees,\r\n      0\r\n    );\r\n    return JSON.stringify({\r\n      amount: totalAmount,\r\n      students: selectedStudents.map((student) => ({\r\n        id: student.id,\r\n        name: student.name,\r\n        amount: student.pendingFees,\r\n      })),\r\n    });\r\n  };\r\n\r\n  // Handle payment completion\r\n  const handlePaymentComplete = () => {\r\n    const receiptData = {\r\n      receiptNo: `RCP${Date.now()}`,\r\n      date: new Date().toLocaleDateString(),\r\n      guardianName: selectedStudents[0].guardianName,\r\n      school: selectedStudents[0].school,\r\n      totalAmount: selectedStudents.reduce(\r\n        (sum, student) => sum + student.pendingFees,\r\n        0\r\n      ),\r\n      students: selectedStudents.map((student) => ({\r\n        ...student,\r\n        amountPaid: student.pendingFees,\r\n        remainingFees: 0,\r\n      })),\r\n    };\r\n    setReceiptData(receiptData);\r\n    setOpenPaymentDialog(false);\r\n    setOpenReceiptDialog(true);\r\n  };\r\n\r\n  // Handle download receipt\r\n  const handleDownloadReceipt = () => {\r\n    const receiptWindow = window.open(\"\", \"\", \"width=800,height=600\");\r\n    const receiptContent = receiptRef.current.innerHTML;\r\n\r\n    receiptWindow.document.write(`\r\n      <!DOCTYPE html>\r\n      <html>\r\n        <head>\r\n          <title>Fee Payment Receipt</title>\r\n          <style>\r\n            @media print {\r\n              body { padding: 40px; }\r\n              .receipt-container { max-width: 800px; margin: 0 auto; }\r\n              @page { size: A4; margin: 20mm; }\r\n            }\r\n          </style>\r\n        </head>\r\n        <body>\r\n          <div class=\"receipt-container\">${receiptContent}</div>\r\n          <script>\r\n            window.onload = () => {\r\n              window.print();\r\n              window.onafterprint = () => window.close();\r\n            }\r\n          </script>\r\n        </body>\r\n      </html>\r\n    `);\r\n\r\n    receiptWindow.document.close();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Back Button */}\r\n      <Button\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        sx={{ mb: 1 }}\r\n        onClick={() => navigate(-1)}\r\n      >\r\n        Back\r\n      </Button>\r\n\r\n      {/* Title with Search and Sort */}\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h6\" fontWeight={\"bold\"}>\r\n          Guardians Payments\r\n        </Typography>\r\n        <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>\r\n          <TextField\r\n            sx={{ width: 200 }}\r\n            label=\"Search by name / email\"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <IconButton sx={{ backgroundColor: \"white\", color: \"black\" }}>\r\n            <SortByAlphaIcon fontSize=\"medium\" titleAccess=\"Sort List\" />\r\n          </IconButton>\r\n        </Box>\r\n      </div>\r\n\r\n      {/* Filters */}\r\n      <Grid container spacing={1} sx={{ mb: 2, mt: 1 }}>\r\n        <Grid item xs={12} sm={4}>\r\n          <FormControl fullWidth size=\"small\">\r\n            <InputLabel>School</InputLabel>\r\n            <Select\r\n              value={selectedSchool}\r\n              label=\"School\"\r\n              onChange={(e) => {\r\n                setSelectedSchool(e.target.value);\r\n                setSelectedStandard(\"\");\r\n                setSelectedDivision(\"\");\r\n              }}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select School\r\n              </MenuItem>\r\n              {schools.map((school) => (\r\n                <MenuItem key={school.id} value={school.name}>\r\n                  {school.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={6} sm={4}>\r\n          <FormControl fullWidth size=\"small\">\r\n            <InputLabel>Standard</InputLabel>\r\n            <Select\r\n              value={selectedStandard}\r\n              label=\"Standard\"\r\n              onChange={(e) => {\r\n                setSelectedStandard(e.target.value);\r\n                setSelectedDivision(\"\");\r\n              }}\r\n              disabled={!selectedSchool}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select Standard\r\n              </MenuItem>\r\n              {standards.map((standard) => (\r\n                <MenuItem key={standard} value={standard}>\r\n                  {standard}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={6} sm={4}>\r\n          <FormControl fullWidth size=\"small\">\r\n            <InputLabel>Division</InputLabel>\r\n            <Select\r\n              value={selectedDivision}\r\n              label=\"Division\"\r\n              onChange={(e) => setSelectedDivision(e.target.value)}\r\n              disabled={!selectedStandard}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select Division\r\n              </MenuItem>\r\n              {divisions.map((division) => (\r\n                <MenuItem key={division} value={division}>\r\n                  {division}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Students List Grouped by Guardian */}\r\n      {Array.from(new Set(mockStudents.map((s) => s.guardianEmail))).map(\r\n        (guardianEmail) => {\r\n          const guardianStudents = filterStudentsByGuardian(guardianEmail);\r\n          if (guardianStudents.length === 0) return null;\r\n\r\n          return (\r\n            <Card key={guardianEmail} sx={{ mb: 2 }}>\r\n              <CardContent>\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    mb: 2,\r\n                  }}\r\n                >\r\n                  <Typography variant=\"h6\">\r\n                    <strong>Guardian Name : </strong>\r\n                    {guardianStudents[0].guardianName}\r\n                  </Typography>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      setSelectedStudents(guardianStudents);\r\n                      setOpenPaymentDialog(true);\r\n                    }}\r\n                  >\r\n                    Pay Fees\r\n                  </Button>\r\n                </Box>\r\n\r\n                <Grid container spacing={2}>\r\n                  {guardianStudents.map((student) => (\r\n                    <Grid item xs={12} sm={6} key={student.id}>\r\n                      <Card variant=\"outlined\">\r\n                        <CardContent>\r\n                          <Typography>\r\n                            <strong>Student:</strong> {student.name}\r\n                          </Typography>\r\n                          <Typography>\r\n                            <strong>Class:</strong> {student.standard} -{\" \"}\r\n                            {student.division}\r\n                          </Typography>\r\n                          <Typography>\r\n                            <strong>Pending Fees:</strong> ₹\r\n                            {student.pendingFees}\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          );\r\n        }\r\n      )}\r\n\r\n      {/* Payment Dialog */}\r\n      <Dialog\r\n        open={openPaymentDialog}\r\n        onClose={() => setOpenPaymentDialog(false)}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>Fee Payment</DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ mb: 2 }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Select Students for Payment\r\n            </Typography>\r\n            {selectedStudents.map((student) => (\r\n              <FormControlLabel\r\n                key={student.id}\r\n                control={\r\n                  <Checkbox\r\n                    checked={selectedStudents.some((s) => s.id === student.id)}\r\n                    onChange={() => handleStudentSelection(student)}\r\n                  />\r\n                }\r\n                label={`${student.name} - ₹${student.pendingFees}`}\r\n              />\r\n            ))}\r\n          </Box>\r\n\r\n          <Box sx={{ mt: 3, textAlign: \"center\" }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Scan QR Code to Pay\r\n            </Typography>\r\n            <QRCodeSVG value={generateQRData()} size={256} />\r\n            <Typography sx={{ mt: 2 }}>\r\n              Total Amount: ₹\r\n              {selectedStudents.reduce(\r\n                (sum, student) => sum + student.pendingFees,\r\n                0\r\n              )}\r\n            </Typography>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenPaymentDialog(false)}>Cancel</Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handlePaymentComplete}\r\n          >\r\n            Complete Payment\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Receipt Dialog */}\r\n      <Dialog\r\n        open={openReceiptDialog}\r\n        onClose={() => setOpenReceiptDialog(false)}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>Payment Receipt</DialogTitle>\r\n        <DialogContent>\r\n          {receiptData && (\r\n            <FeeReceipt ref={receiptRef} paymentData={receiptData} />\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenReceiptDialog(false)}>Close</Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={handleDownloadReceipt}\r\n            startIcon={<Print />}\r\n          >\r\n            Print\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payments;\r\n"],"names":["mockStudents","id","name","school","standard","division","guardianName","guardianEmail","totalFees","pendingFees","FeeReceipt","React","_ref","ref","paymentData","_jsxs","style","padding","fontFamily","children","_jsx","Typography","variant","align","fontWeight","gutterBottom","Divider","sx","my","Grid","container","spacing","item","xs","receiptNo","date","students","map","student","Box","mb","amountPaid","remainingFees","textAlign","totalAmount","mt","color","Payments","navigate","useNavigate","receiptRef","useRef","selectedSchool","setSelectedSchool","useState","selectedStandard","setSelectedStandard","selectedDivision","setSelectedDivision","searchTerm","setSearchTerm","openPaymentDialog","setOpenPaymentDialog","selectedStudents","setSelectedStudents","receiptData","setReceiptData","openReceiptDialog","setOpenReceiptDialog","Button","size","onClick","display","alignItems","justifyContent","gap","TextField","width","label","value","onChange","e","target","IconButton","backgroundColor","SortByAlphaIcon","fontSize","titleAccess","sm","FormControl","fullWidth","InputLabel","Select","MenuItem","disabled","Array","from","Set","s","guardianStudents","filter","filterStudentsByGuardian","length","Card","CardContent","Dialog","open","onClose","maxWidth","DialogTitle","DialogContent","FormControlLabel","control","Checkbox","checked","some","isSelected","find","handleStudentSelection","concat","QRCodeSVG","generateQRData","reduce","sum","JSON","stringify","amount","DialogActions","handlePaymentComplete","Date","now","toLocaleDateString","_objectSpread","handleDownloadReceipt","receiptWindow","window","receiptContent","current","innerHTML","document","write","close","startIcon","Print"],"sourceRoot":""}